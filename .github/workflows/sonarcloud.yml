# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: SonarCloud analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:

  # Add a job for running Jest tests
  jest-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies for Jest
        working-directory: Web Ui
        run: npm install

      - name: Run Jest tests
        working-directory: Web Ui
        run: npm test

  # Add a job for running Cypress tests
  cypress-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Node.js for Cypress
        uses: actions/setup-node@v3
        with:
          node-version: '14' # You can adjust the Node.js version as needed for Cypress

      - name: Install dependencies for Cypress
        working-directory: Web Ui
        run: npm install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: Web Ui
          start: npm run dev
         

      - name: Stop Your Application
        working-directory: Web Ui
        run: pkill -f "vite" # Use pkill to stop the development server

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Jobs for prettier       
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 

      - name: Install Dependencies
        working-directory: Web Ui
        run: npm install 

      - name: Run Prettier
        working-directory: Web Ui
        run: npx prettier --write "src/**/*.{js,ts,tsx}" 

      - name: Check for Changes in TypeScript files
        id: check-changes
        working-directory: Web Ui
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          if [[ -n $(git status --porcelain "src/**/*.{ts,tsx}") ]]; then
            echo "Changes detected in TypeScript files."
            git add .
            git commit -m "Auto-format code with Prettier"
            git push
          else
            echo "No changes to commit in TypeScript files."
            exit 0
          fi